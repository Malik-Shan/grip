---

---
<header>
<div class="container">
    <nav>
        <a class="nav_logo" href="/">
            Grip <span>Tests</span>
        </a>
        <div class="searchWrapper">
            <button class="fsb">
                <div class="searchbtn">
                    <i class="fas fa-search"></i>
                </div>
                <span class="searchplaceholder">Search...</span>
                <svg class="searchkeybind" xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" class="bi bi-slash" viewBox="0 0 16 16">
                    <path d="M11.354 4.646a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708l6-6a.5.5 0 0 1 .708 0z"/>
                </svg>
            </button>
        </div>
        <div class="navigation">
            <ul class="nav_list">
                <li class="nav_items dropdown dropdown1"><a class="nav_link">Subjects<i data-drop="false" class="fa-solid fa-caret-down"></i></a>
                    <ul class="dropdown_menu dropdown_menu1" data-drop="false" aria-labelledby="subjects" aria-expanded="false">
                        <li class="dropdown_item"><a href="/Biology" class="dropdown_link">Biology</a></li>
                        <li class="dropdown_item"><a href="/Physics" class="dropdown_link">Physics</a></li>
                        <li class="dropdown_item"><a href="/Chemistry" class="dropdown_link">Chemistry</a></li>
                        <li class="dropdown_item"><a href="/English" class="dropdown_link">English</a></li>
                    </ul>
                </li>
                <li class="nav_items dropdown dropdown2"><a class="nav_link"><i class="fa-solid fa-ellipsis-vertical"></i></a>
                    <ul class=" dropdown_menu dropdown_menu2" data-drop="false" aria-labelledby="dropdown2" aria-expanded="false">
                        <li class="dropdown_item"><a href="/Schedule" class="dropdown_link">Schedule</a></li>
                        <li class="dropdown_item"><a href="" class="dropdown_link">Contact</a></li>
                        <li class="dropdown_item"><a href="" class="dropdown_link dark-mode"><i class="fa-solid fa-circle-half-stroke"></i></a></li>
                    </ul>
                </li>
            </ul>
        </div>
    </nav>
    <dialog class="searchModal" aria-hidden="true">
        <span class="closeModal">
            <i class="fa-solid fa-circle-xmark"></i>
        </span>
        <input type="search" id="search" class="searchbar" placeholder="Search...">
        <span class="resultnum"></span>
        <div id="results" />
        
    </dialog>
</div>
</header>

<script is:inline>
    const searchInput = document.querySelector('#search');

searchInput.addEventListener('input', async (e) => {
    
    let searchTimer
    // console.log(searchInput);

    window.pagefind = await import ('/pagefind/pagefind.js');

    searchAndUpdate(e.target.value , window.pagefind);
})

const searchAndUpdate = debounce( async (query, find) => {
    if(query.length >= 1){
        // search index
    // console.log(query);
    const search = await find.search(query);
    // clears prev results
    document.querySelector('#results').innerHTML = '';

    // Give results number
    const resultnum = document.querySelector('.resultnum');
    
    const num = search.results.length;
    resultnum.textContent = `Results Found (${num})`;
    // add new result
    if(num >=1){
        for( const result of search.results) {
        const data = await result.data()
        document.querySelector('#results').innerHTML += `
        <div>
            <a href="${data.url}">
            <h3>${data.meta.title}</h3>
            <img src="${data.meta.image[0]}" style="width:30px;">
            <p>${data.excerpt}</p>
            </a>
        </div>`
    }
    } else{
        document.querySelector('#results').innerHTML = `
        <span class="noresultsfound"> No Results Found </span>
        `
        ;
    }
    } else {
        document.querySelector('.resultnum').textContent = '';
        document.querySelector('#results').innerHTML = '';
    }
} , 500)
// async function searchAndUpdate(query , find){
    
    

// }

function debounce(cb, delay = 1000){
  let timeout
  return (...arg) => {
    clearTimeout(timeout)
    timeout = setTimeout(() => {
      cb(...arg)
    }, delay)
  }
}
</script>